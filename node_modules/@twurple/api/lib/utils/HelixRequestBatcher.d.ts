import { type BaseApiClient } from '../client/BaseApiClient';
import { type ContextApiCallOptions } from '../client/ContextApiCallOptions';
/** @private */
export declare class HelixRequestBatcher<D, T> {
    private readonly _callOptions;
    private readonly _queryParamName;
    private readonly _matchKey;
    private readonly _mapper;
    private readonly _limitPerRequest;
    private readonly _client;
    private readonly _requestedIds;
    private readonly _requestResolversById;
    private readonly _delay;
    private _waitTimer;
    constructor(_callOptions: Omit<ContextApiCallOptions, 'type'>, _queryParamName: string, _matchKey: Extract<keyof D, string>, client: BaseApiClient, _mapper: (data: D) => T, _limitPerRequest?: number);
    request(id: string): Promise<T | null>;
    private _handleBatch;
    private _doRequest;
}
//# sourceMappingURL=HelixRequestBatcher.d.ts.map